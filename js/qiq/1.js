const base64safeurl={base64UrlEncode:function(input){let base64=btoa(input);return base64.replace(/\+/g,'-').replace(/\//g,'_').replace(/=+$/,'')},base64UrlDecode:function(input){let base64=input.replace(/-/g,'+').replace(/_/g,'/');const padding=base64.length%4;if(padding>0){base64+='='.repeat(4-padding)} return atob(base64)}};const fscosssys={encrypt:function(text,key){return CryptoJS.AES.encrypt(text,key).toString()},decrypt:function(cipherText,key){const bytes=CryptoJS.AES.decrypt(cipherText,key);return bytes.toString(CryptoJS.enc.Utf8)},hashSync:function(input){const shaObj=new jsSHA("SHA-256","TEXT");shaObj.update(input);return shaObj.getHash("HEX")}};const fscoss={gojend:function(mdetaa,mdetab){var detaha=fscosssys.hashSync(mdetaa);var dago=fscosssys.encrypt(mdetab,detaha);var jsonle={a:mdetaa,b:dago};var jsonbrr=JSON.stringify(jsonle,null,2);var base64Encoded=btoa(unescape(encodeURIComponent(jsonbrr)));var rawreturn=base64safeurl.base64UrlEncode(base64Encoded);return rawreturn},cbjend:function(rawrowdeta){var rowdeta=base64safeurl.base64UrlDecode(rawrowdeta);const rwdeta=atob(rowdeta);const data=JSON.parse(rwdeta);var mydetqpqpq=data.a;var detaha=fscosssys.hashSync(data.a);var detahb=data.b;var bdeta=fscosssys.decrypt(detahb,detaha);var jsonle={a:mydetqpqpq,b:bdeta};return JSON.stringify(jsonle,null,2)}}
